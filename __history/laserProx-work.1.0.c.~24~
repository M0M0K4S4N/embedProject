/* This example shows how to get single-shot range
 measurements from the VL53L0X. The sensor can optionally be
 configured with different ranging profiles, as described in
 the VL53L0X API user manual, to get better performance for
 a certain application. This code is based on the four
 "SingleRanging" examples in the VL53L0X API.

 The range readings are in units of mm. */
#include "VL53L0X/pic16f886.h"
//#include <Wire.h>
#include "VL53L0X/VL53L0X.h"
#include <math.h>

#define millis()  (msTimer)
int32 msTimer=0;


#INT_TIMER1
void timer1_isr() {
   set_timer1(65286); // keep period at 1 ms (at 8 MHz)
   msTimer++;
}


void pic_setup() {
   setup_timer_1(T1_INTERNAL | T1_DIV_BY_8);
   set_timer1(65286); // keep period at 1 ms (at 8 MHz)
   enable_interrupts(INT_TIMER1);
   enable_interrupts(GLOBAL);

}



// VL53L0X sensor;


// Uncomment this line to use long range mode. This
// increases the sensitivity of the sensor and extends its
// potential range, but increases the likelihood of getting
// an inaccurate reading because of reflections from objects
// other than the intended target. It works best in dark
// conditions.

#define LONG_RANGE


// Uncomment ONE of these two lines to get
// - higher speed at the cost of lower accuracy OR
// - higher accuracy at the cost of lower speed

//#define HIGH_SPEED
#define HIGH_ACCURACY


void setup()
{

   printf("Starting\r\n");
   
   pic_setup();

  init();
  setTimeout(200);

#if defined LONG_RANGE
  // lower the return signal rate limit (default is 0.25 MCPS)
  setSignalRateLimit(0.1);
  // increase laser pulse periods (defaults are 14 and 10 PCLKs)
  setVcselPulsePeriod(VcselPeriodPreRange, 18);
  setVcselPulsePeriod(VcselPeriodFinalRange, 14);
#endif

#if defined HIGH_SPEED
  // reduce timing budget to 20 ms (default is about 33 ms)
  setMeasurementTimingBudget(20000);
#elif defined HIGH_ACCURACY
  // increase timing budget to 200 ms
  setMeasurementTimingBudget(200000);
#endif
}

void loop()
{
  printf("%lu\r\n", readRangeSingleMillimeters());
  if (timeoutOccurred()) { printf(" TIMEOUT\r\n"); }

}

////////////////////////////////////////////////////////////
//define LCD Display 
////////////////////////////////////////////////////////////
#define SLAVE_ADDRESS  0xB0
#define DISPLAY_ADDRESS 0xB4
#define REGISTER_SIZE  8   
#define DISPLAY_CMD_SEND_VALUE 2
#define DISPLAY_CMD_SEND_LONG_TEXT 5
#define DISPLAY_CMD_CLS 6
#define DISPLAY_CMD_SETPOS 8
////////////////////////////////////////////////////////////
//define LCD Display 
////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
//LCD Display Funtion 
///////////////////////////////////////////////////////////////////////////
int16 rotaryR;
float degree,distance,tall,rad;

void displayLongText(char* text) {

   int i ;
   i2c_start();
   i2c_write(DISPLAY_ADDRESS);
   i2c_write(DISPLAY_CMD_SEND_LONG_TEXT);

   for(i=0;text[i]!='\0';i++)
   {
      i2c_write(text[i]);

   }
   i2c_write('\0');
   i2c_stop();

//delay_ms(100);

}




void clearDisplay(){

   i2c_start();
   i2c_write(DISPLAY_ADDRESS);
   i2c_write(DISPLAY_CMD_CLS);
   i2c_stop();
}

void setDisplayPos(int pos){
   i2c_start();
   i2c_write(DISPLAY_ADDRESS);
   i2c_write(DISPLAY_CMD_SETPOS);
   i2c_write(pos);
   i2c_write('\0');
   i2c_stop();
}
///////////////////////////////////////////////////////////////////////////
//LCD Display Funtion 
///////////////////////////////////////////////////////////////////////////


float distanceFromUltrasonic(){

   float distance;
   output_high(PIN_C0);
   delay_us(20);
   output_low(PIN_C0);
   
   while(!input(PIN_C1)) {}
   set_timer1(0);
   while(input(PIN_C1)) {
   if(get_timer1() >= 65534) return -1;
   }
   distance = get_timer1()*4*0.0005; //time ms
   distance = distance *0.3497/*m/ms*/  *100; // distance in cm

      
   return distance ;
    
}
///////////////////////////////////////////////////////////////////////////
//READ DISTANCE ULTRASONIC
///////////////////////////////////////////////////////////////////////////


void main() {
   setup();
   while(1) {
      
   }

}


#include "VL53L0X/VL53L0X.c"

